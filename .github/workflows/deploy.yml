name: Deploy to lokipaw.com

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: deploy-main
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-24.04

    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}     # lokipaw.com
      SSH_PORT: ${{ secrets.SSH_PORT }}     # 22022
      SSH_USER: ${{ secrets.SSH_USER }}     # feda
      DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }} # /home/feda/docker/estate_master

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install rsync
        run: sudo apt-get update -y && sudo apt-get install -y rsync

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Make sure target directory exists on server
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            mkdir -p '$DEPLOY_DIR'
          "

      - name: Rsync sources to server
        run: |
          RSYNC_EXCLUDES="--exclude .git/ --exclude pgdata/ --exclude media/ --exclude staticfiles/"
          rsync -az --delete $RSYNC_EXCLUDES \
            -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" \
            ./ "$SSH_USER@$SSH_HOST:$DEPLOY_DIR/"

      - name: Ensure .env.prod and .env symlink
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            cd '$DEPLOY_DIR'
            if [ ! -f .env.prod ]; then
              cat > .env.prod <<'EOF'
DJANGO_SETTINGS_MODULE=estate_project.settings
SECRET_KEY=please-change-me
DEBUG=0
ALLOWED_HOSTS=estate.lokipaw.com,localhost,127.0.0.1
DATABASE_URL=postgres://estate_user:estate_pass@db:5432/estate_prod
POSTGRES_DB=estate_prod
POSTGRES_USER=estate_user
EOF
            fi
            [ -e .env ] || ln -s .env.prod .env
          "

      - name: Rebuild & restart with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            cd '$DEPLOY_DIR'
            docker compose down
            docker compose up -d --build
            docker compose ps
          "
