name: Deploy to lokipaw.com

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

# чтобы не бежало несколько деплоев параллельно
concurrency:
  group: deploy-main
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-24.04

    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}          # lokipaw.com
      SSH_PORT: ${{ secrets.SSH_PORT }}          # 22022
      SSH_USER: ${{ secrets.SSH_USER }}          # feda
      DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}      # /home/feda/docker/estate_master

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install rsync (just in case)
        run: sudo apt-get update -y && sudo apt-get install -y rsync

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}   # приватный ключ из Мак-а

      - name: Make sure target directory exists on server
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            mkdir -p '$DEPLOY_DIR'
          "

      - name: Rsync sources to server
        run: |
          RSYNC_EXCLUDES="--exclude .git/ --exclude pgdata/ --exclude media/ --exclude staticfiles/"
          rsync -az --delete $RSYNC_EXCLUDES \
            -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" \
            ./ "$SSH_USER@$SSH_HOST:$DEPLOY_DIR/"

      # .env.prod находится в репозитории; делаем .env -> .env.prod если .env ещё не создан
      - name: Ensure env file on server
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            cd '$DEPLOY_DIR'
            [ -f .env ] || ln -s .env.prod .env
          "

      - name: Rebuild & restart with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            cd '$DEPLOY_DIR'
            docker compose down
            docker compose up -d --build
            docker compose ps
          "
