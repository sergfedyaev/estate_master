name: Deploy to lokipaw.com

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

# чтобы несколько запусков не ехали параллельно
concurrency:
  group: deploy-main
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-24.04
    env:
      PYTHON_VERSION: "3.12"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django sanity checks
        env:
          DJANGO_SETTINGS_MODULE: estate_project.settings
        run: |
          # логируем WARN, но не валим билд
          python manage.py check --deploy || true

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}      # lokipaw.com
      SSH_PORT: ${{ secrets.SSH_PORT }}      # 22022
      SSH_USER: ${{ secrets.SSH_USER }}      # feda
      DEPLOY_DIR: ${{ secrets.DEPLOY_DIR }}    # /home/feda/docker/estate_master
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # приватный ключ с Мака

      - name: Make sure target directory exists
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            mkdir -p '$DEPLOY_DIR'
          "

      - name: Rsync sources to server
        env:
          RSYNC_EXCLUDES: "--exclude .git/ --exclude pgdata/ --exclude media/ --exclude staticfiles/"
        run: |
          rsync -az --delete $RSYNC_EXCLUDES \
            -e "ssh -p $SSH_PORT -o StrictHostKeyChecking=no" \
            ./ "$SSH_USER@$SSH_HOST:$DEPLOY_DIR/"

      - name: Rebuild & restart with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" "
            set -e
            cd '$DEPLOY_DIR'
            
            # Удаляем строку 'env_file: .env' из docker-compose.yml, если она есть.
            # Это предотвращает конфликт с флагом --env-file.
            sed -i '/env_file: .env/d' docker-compose.yml

            # Явно указываем --env-file, чтобы избежать проблем с симлинками
            docker compose --env-file .env.prod down || true
            docker compose --env-file .env.prod up -d --build
            docker compose --env-file .env.prod ps
          "
